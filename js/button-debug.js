// Debug espec√≠fico para o bot√£o do Facebook
window.debugFacebookButton = function() {
    console.log('üîç === DEBUG DO BOT√ÉO FACEBOOK ===');
    
    const loginBtn = document.getElementById('facebookLoginBtn');
    if (!loginBtn) {
        console.error('‚ùå Bot√£o n√£o encontrado no DOM!');
        return;
    }
    
    console.log('‚úÖ Bot√£o encontrado no DOM');
    
    // Verificar estilos computados
    const styles = window.getComputedStyle(loginBtn);
    console.log('üìä Estilos atuais:');
    console.log(`   display: ${styles.display}`);
    console.log(`   visibility: ${styles.visibility}`);
    console.log(`   opacity: ${styles.opacity}`);
    console.log(`   position: ${styles.position}`);
    console.log(`   z-index: ${styles.zIndex}`);
    
    // Verificar classes
    console.log('üìã Classes:', loginBtn.className);
    
    // Verificar se est√° vis√≠vel
    const rect = loginBtn.getBoundingClientRect();
    console.log('üìê Dimens√µes:', {
        width: rect.width,
        height: rect.height,
        top: rect.top,
        left: rect.left
    });
    
    // Verificar modo da API
    const apiMode = document.getElementById('apiMode')?.value;
    console.log(`üé≠ Modo atual: ${apiMode}`);
    
    // Verificar se app est√° carregado
    const app = window.metaAdsApp;
    if (app) {
        console.log('üì± App status:');
        console.log(`   Modo API: ${app.api?.mode}`);
        console.log(`   Autenticado: ${app.isAuthenticated}`);
        console.log(`   Status conex√£o: ${app.api?.connectionStatus}`);
    } else {
        console.warn('‚ö†Ô∏è App principal n√£o carregado');
    }
    
    return {
        buttonExists: !!loginBtn,
        styles: {
            display: styles.display,
            visibility: styles.visibility,
            opacity: styles.opacity
        },
        dimensions: rect,
        apiMode,
        appLoaded: !!app
    };
};

// Fun√ß√£o para for√ßar exibi√ß√£o do bot√£o
window.forceShowFacebookButton = function() {
    console.log('üí™ === FOR√áANDO EXIBI√á√ÉO DO BOT√ÉO ===');
    
    const loginBtn = document.getElementById('facebookLoginBtn');
    if (!loginBtn) {
        console.error('‚ùå Bot√£o n√£o encontrado!');
        return false;
    }
    
    // For√ßar estilos
    loginBtn.style.display = 'flex !important';
    loginBtn.style.visibility = 'visible !important';
    loginBtn.style.opacity = '1 !important';
    loginBtn.style.position = 'relative !important';
    loginBtn.style.zIndex = '1000 !important';
    
    console.log('‚úÖ Estilos for√ßados aplicados');
    
    // Verificar resultado
    const styles = window.getComputedStyle(loginBtn);
    console.log('üìä Estilos ap√≥s for√ßar:');
    console.log(`   display: ${styles.display}`);
    console.log(`   visibility: ${styles.visibility}`);
    console.log(`   opacity: ${styles.opacity}`);
    
    return true;
};

// Fun√ß√£o para testar mudan√ßa de modo
window.testModeSwitch = function() {
    console.log('üîÑ === TESTANDO MUDAN√áA DE MODO ===');
    
    const apiModeSelect = document.getElementById('apiMode');
    if (!apiModeSelect) {
        console.error('‚ùå Seletor de modo n√£o encontrado!');
        return;
    }
    
    console.log(`üé≠ Modo atual: ${apiModeSelect.value}`);
    
    // Mudar para real se n√£o estiver
    if (apiModeSelect.value !== 'real') {
        console.log('üîÑ Mudando para modo real...');
        apiModeSelect.value = 'real';
        
        // Disparar evento de mudan√ßa
        const event = new Event('change', { bubbles: true });
        apiModeSelect.dispatchEvent(event);
        
        console.log('‚úÖ Evento de mudan√ßa disparado');
    } else {
        console.log('‚úÖ J√° est√° no modo real');
    }
    
    // Aguardar e verificar bot√£o
    setTimeout(() => {
        debugFacebookButton();
    }, 1000);
};

// Fun√ß√£o para debug completo
window.fullButtonDebug = function() {
    console.log('üéØ === DEBUG COMPLETO DO BOT√ÉO ===');
    console.log('');
    
    // 1. Verificar elementos do DOM
    console.log('1Ô∏è‚É£ Verificando DOM...');
    const loginBtn = document.getElementById('facebookLoginBtn');
    const apiModeSelect = document.getElementById('apiMode');
    const header = document.querySelector('.main-header');
    
    console.log(`   Bot√£o Facebook: ${loginBtn ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Seletor Modo: ${apiModeSelect ? '‚úÖ' : '‚ùå'}`);
    console.log(`   Header: ${header ? '‚úÖ' : '‚ùå'}`);
    
    if (!loginBtn) {
        console.error('‚ùå PROBLEMA: Bot√£o n√£o existe no DOM');
        return;
    }
    
    // 2. Verificar CSS
    console.log('');
    console.log('2Ô∏è‚É£ Verificando CSS...');
    debugFacebookButton();
    
    // 3. Testar mudan√ßa de modo
    console.log('');
    console.log('3Ô∏è‚É£ Testando mudan√ßa de modo...');
    testModeSwitch();
    
    // 4. For√ßar exibi√ß√£o
    console.log('');
    console.log('4Ô∏è‚É£ For√ßando exibi√ß√£o...');
    forceShowFacebookButton();
    
    console.log('');
    console.log('üéØ Debug completo finalizado!');
    console.log('üí° Se ainda n√£o aparecer, o problema pode ser de CSS ou layout');
};

console.log('üîß Debug do bot√£o Facebook carregado!');
console.log('');
console.log('üìã COMANDOS DISPON√çVEIS:');
console.log('‚Ä¢ debugFacebookButton() - Verificar estado do bot√£o');
console.log('‚Ä¢ forceShowFacebookButton() - For√ßar exibi√ß√£o');
console.log('‚Ä¢ testModeSwitch() - Testar mudan√ßa de modo');
console.log('‚Ä¢ fullButtonDebug() - Debug completo');
console.log('');
console.log('üí° Execute fullButtonDebug() para come√ßar!');